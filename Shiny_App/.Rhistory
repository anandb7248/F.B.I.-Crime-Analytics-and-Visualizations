college_crime <-melt(college, id.vars='School', variable_name='Crime')
View(college_crime)
colnames(college_crime)[3] <- 'Count'
View(college_crime)
colnames(college_crime)[3] <- 'Count'
View(college_crime)
str(college_crime)
zz <- melt(college, id.vars='School')
View(zz)
college_crime$Count <- as.numeric(as.character(college_crime$Count))
college_crime <-melt(college, id.vars='School', variable_name='Crime')
View(college_crime)
colnames(college_crime)[3] <- 'Count'
college_crime$Count <- as.numeric(college_crime$Count)
which(colleg_crime$Count == NA)
which(college_crime$Count == NA)
which(is.na(college_crime))
which(is.na(college_crime$Count))
college_crime$Count[2537]
college_crime[2537]
college_crime[2537, ]
college_crime <-melt(college, id.vars='School', variable_name='Crime')
colnames(college_crime)[3] <- 'Count'
college_crime[2537, ]
View(college_crime)
collee_crime$Count[2537] <- 1131
college_crime$Count[2537] <- 1131
View(college_crime)
which(college_crime$Count > 999)
str(college_crime)
college_crime$Count <- as.character(college_crime$Count)
college_crime$Count <- as.numeric(college$crime$Count)
college_crime$Count <- as.numeric(college_crime$Count)
View(college_crime)
college_crime <-melt(college, id.vars='School', variable_name='Crime')
colnames(college_crime)[3] <- 'Count'
college_crime$Count[2537, ]
college_crime[2537, ]
college_crime$Count[2537] <- 1131 #count was 1,131. The ',' will coerce to NA
college_crime$Count <- as.numeric(college_crime$Count)
p <- ggplot(college_crime,aes(School,value,fill=variable)) +
geom_bar(position='fill',stat='identity') +
theme(axis.text.x = element_text(angle=90,hjust=1))
p
p
p <- ggplot(college_crime,aes(School,Count,fill=variable)) +
geom_bar(position='fill',stat='identity') +
theme(axis.text.x = element_text(angle=90,hjust=1))
p
p <- ggplot(college_crime,aes(School,Count,fill=Crime)) +
geom_bar(position='fill',stat='identity') +
theme(axis.text.x = element_text(angle=90,hjust=1))
p
college_crime <-melt(college, id.vars='School', variable_name='Crime')
colnames(college_crime)[3] <- 'Count'
college_crime$Count[2537] <- 1131 #count was 1,131. The ',' will coerce to NA
college_crime$Count <- as.numeric(as.character(college_crime$Count))
p <- ggplot(college_crime,aes(School,Count,fill=Crime)) +
geom_bar(position='fill',stat='identity') +
theme(axis.text.x = element_text(angle=90,hjust=1))
p
str(washington)
washington <-college[which(college$State=='WASHINGTON'),]
str(washington)
View(washington)
View(college)
college <- read.csv('./Data/College_Crime_Rate.csv')
View(college)
head(college)
names(college)
college$X<-NULL
yr <- 2015
head(college)
names(college)
crimes <- college[, -c(1, 3)]
crimes <-melt(crimes, id.vars='School', variable_name='Crime')
colnames(crimes)[3] <- 'Count'
names(crimes)
crimes$Count[2537] <- 1131 #count was 1,131. The ',' will coerce to NA
crimes$Count <- as.numeric(as.character(college_crime$Count))
p <- ggplot(college_crime,aes(School,Count,fill=Crime)) +
geom_bar(position='fill',stat='identity') +
theme(axis.text.x = element_text(angle=90,hjust=1))
p
p <- ggplot(crimes,aes(School,Count,fill=Crime)) +
geom_bar(position='fill',stat='identity') +
theme(axis.text.x = element_text(angle=90,hjust=1))
p
washington <-college[which(college$State=='WASHINGTON'),]
View(washington)
View(washington)
washington <-college[which(college$State=='WASHINGTON'),]
View(washington)
View(washington)
washington <-washington[, -c(1,3)]
washington_crimes<-melt(washinton, id.vars='School', variable_name='Crime')
colnames(washington_crimes) <- 'Count'
washington_crimes$Count<-as.numeric(as.character(washinton_crimes$Count))
washinton_crimes
washington_crimes<-melt(washinton, id.vars='School', variable_name='Crime')
colnames(washington_crimes) <- 'Count'
washington_crimes$Count<-as.numeric(as.character(washinton_crimes$Count))
washington_crimes
washington_crimes<-melt(washinton, id.vars='School', variable_name='Crime')
colnames(washington_crimes) <- 'Count'
washington_crimes$Count<-as.numeric(as.character(washington_crimes$Count))
washington_crimes
washington_crimes<-melt(washinton, id.vars='School', variable_name='Crime')
washington_crimes<-melt(washington, id.vars='School', variable_name='Crime')
colnames(washington_crimes) <- 'Count'
washington_crimes$Count<-as.numeric(as.character(washington_crimes$Count))
washington_crimes
washington_crimes<-melt(washington, id.vars='School', variable_name='Crime')
View(washington_crimes)
colnames(washington_crimes) <- 'Count'
washington_crimes<-melt(washington, id.vars='School', variable_name='Crime')
colnames(washington_crimes)[3] <- 'Count'
washington_crimes$Count<-as.numeric(as.character(washington_crimes$Count))
washington_crimes
w <- ggplot(washington_crimes,aes(x=School,y = Count, fill=Crime)) +
geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle=90,hjust=1))# +
#scale_y_log10()
w
w <- ggplot(washington_crimes,aes(x=School,y = Count, fill=Crime)) +
geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle=90,hjust=1)) +
labs(title='Violent Crimes in Washington Universities ',
x='University', y='Ocurrences')
#scale_y_log10()
w
w <- ggplot(washington_crimes,aes(x=School,y = Count, fill=Crime)) +
geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle=90,hjust=1)) +
labs(title='State of Washington ',
x='University', y='Ocurrences')
#scale_y_log10()
w
n <-names(which(sapply(college,class)=='integer'))
n
str(college)
sapply(college,class)
ggplot(Washington_crimes,aes(x=School, Count, fill=Crime))
ggplot(washington_crimes,aes(x=School, Count, fill=Crime))
college <- read.csv('./Data/College_Crime_Rate.csv')
View(college)
names(college)
college$X<-NULL
yr <- 2015
head(college)
crimes <- college[, -c(1, 3)]
View(crimes)
crimes <-melt(crimes, id.vars='School', variable_name='Crime')
colnames(crimes)[3] <- 'Count'
crimes$Count[2537] <- 1131 #count was 1,131. The ',' will coerce to NA
crimes$Count <- as.numeric(as.character(college_crime$Count))
View(college)
View(college)
washington <-college[which(college$State=='WASHINGTON'), ] #get all universities within chosen state
washington <-washington[, -c(1,3)] # remove State, and Student_Enrollement columns
washington_crimes<-melt(washington, id.vars='School', variable_name='Crime')
colnames(washington_crimes)[3] <- 'Count'
washington_crimes$Count<-as.numeric(as.character(washington_crimes$Count))
w <- ggplot(washington_crimes,aes(x=School,y = Count, fill=Crime)) +
geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle=90,hjust=1)) +
labs(title='State of Washington ',
x='University', y='Ocurrences')
#scale_y_log10()
w
states <- unique(college$State)
states
states <- as.character(states)
states
states <- as.character(states)
runApp()
runApp()
runApp()
write.csv(states, file='states.csv')
college <- read.csv('./Data/College_Crime_Rate.csv')
college$X<-NULL
crimes <- college[, -c(1, 3)]
crimes <-melt(crimes, id.vars='School', variable_name='Crime')
colnames(crimes)[3] <- 'Count'
crimes$Count[2537] <- 1131 #count was 1,131. The ',' will coerce to NA
crimes$Count <- as.numeric(as.character(college_crime$Count))
p <- ggplot(crimes,aes(School,Count,fill=Crime)) +
geom_bar(position='fill',stat='identity') +
theme(axis.text.x = element_text(angle=90,hjust=1))
p
washington <-college[which(college$State=='WASHINGTON'), ] #get all universities within chosen state
washington <-washington[, -c(1,3)] # remove State, and Student_Enrollement columns
washington_crimes<-melt(washington, id.vars='School', variable_name='Crime')
colnames(washington_crimes)[3] <- 'Count'
washington_crimes$Count<-as.numeric(as.character(washington_crimes$Count))
washington_crimes
w <- ggplot(washington_crimes,aes(x=School,y = Count, fill=Crime)) +
geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle=90,hjust=1)) +
labs(title='State of Washington ',
x='University', y='Ocurrences')
w
states <- unique(college$State)
states <- as.character(states)
write.csv(states, file='states.csv')
runApp()
runApp()
runApp()
runApp()
View(crimes)
xx <- subset(college, State=='WASHINGTON')
View(xx)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages('plotrix')
library(plotrix)
runApp()
runApp()
runApp()
runApp()
?pie3D
library(ggplot2)
library(reshape)
library(magrittr)
library(maps)
library(plotrix)
us_crime <- read.csv('Data/01_crime_in_the_united_states_1996-2015.csv')
View(us_crime)
zz <- apply(us_crime, mean)
?apply
View(crimes)
View(crimes)
zz <- subset(us_crime, select=c('year', 'population', murder', 'rape', 'robbery', 'assult', 'Burglary'))
zz <- subset(us_crime, select=c('year', 'population', 'murder', 'rape', 'robbery', 'assult', 'Burglary'))
zz <- subset(us_crime, select=c('year', 'population', 'murder', 'rape', 'robbery', 'assault', 'Burglary'))
View(zz)
zz <- subset(us_crime, select=c('year', 'population', 'murder', 'rape', 'robbery',
'assault', 'Burglary'))
columns <- c('murder', 'rape', 'robbery', 'assault', 'Burglary')
View(zz)
zz$avg <- apply(zz, columns, mean)
View(zz)
View(zz)
zz <- us_crime
zz$avg <- apply(zz, columns, mean)
columns <- c('murder', 'rape', 'robbery', 'assault', 'Burglary')
zz$avg <- apply(zz, columns, mean)
View(us_crime)
zz <- subset(us_crime, select=c('year', 'population', 'murder', 'rape', 'robbery', 'assault', 'Burglary'))
zz$avg <- apply(zz, colnames(zz), mean)
zz$avg <- apply(zz, colnames(zz), avg)
columns <- c('murder', 'rape', 'robbery')
zz$avg <- apply(zz, columns, mean)
View(zz)
us_crime$avg <- apply(us_crime, columns, mean)
us_crime$avg <- apply(us_crime, columns, mean)
View(us_crime)
apply(us_crime, columns, mean)
zz <- subset(us_crime, select=c('murder', 'rape', 'robbery'))
apply(zz, columns, mean)
apply(zz, 'murder', 'rape', 'robbery', mean)
?apply
apply(zz, 2, mean)
apply(zz, MARGIN=c(1, 2, 3), mean)
apply(zz, 2, sd)
str(zz)
View(us_crime)
columns <- c('murder', 'rape', 'robbery', 'assault', 'Burglary')
str(us_crime)
zz <- subset(us_crime, select=c('murder', 'rape', 'robbery', 'assault', 'Burglary'))
View(zz)
apply(zz, 2, as.numeric)
View(zz)
zz$murder <- as.numeric(as.character(zz$murder))
View(zz)
zz <- subset(us_crime, select=c('murder', 'rape', 'robbery', 'assault', 'Burglary'))
zz$murder <- as.character(zz$murder)
View(zz)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(crimes)
runApp()
runApp()
library(ggplot2)
library(scales)
bp<- ggplot(washington_crimes, aes(x="Crime", y=Count, fill=Crime))+
geom_bar(width = 1, stat = "identity")
bp
pie <- bp + coord_polar("y", start=0) + scale_fill_brewer(palette="Paired")
pie
View(washington_crimes)
View(washington)
View(washington)
pie_crime <- washington[, -c(6, 8)] #remove Property and Larceny_Theft
library(reshape2)
pie_crime <- melt(pie_crime, id.vars='School')
View(pie_crime)
pie_crime <- melt(pie_crime, id.vars='School', variable_name='Crime')
View(pie_crime)
pie_crime <- washington[, -c(6, 8)] #remove Property and Larceny_Theft
pie_crime <- melt(pie_crime, id.vars='School', variable_name='Crime')
View(pie_crime)
pie_crime <- washington[, -c(6, 8)] #remove Property and Larceny_Theft
View(pie_crime)
pie_crimes <-melt(pie_crimes, id.vars='School', variable_name='Crime')
pie_crimes <- washington[, -c(6, 8)] #remove Property and Larceny_Theft
rm(pie_crime)
pie_crimes <-melt(pie_crimes, id.vars='School', variable_name='Crime')
View(pie_crimes)
crimes <- college[, -c(1, 3)]
rm(pie_crimes)
View(crimes)
pie_crimes <- washington[, -c(6, 8)] #remove Property and Larceny_Theft
pie_chart <-melt(pie_crimes, id.vars='School', variable_name='Crime')
View(pie_chart)
colnames(pie_chart) <- ('School', 'Crime', 'Count')
colnames(pie_chart) <- c('School', 'Crime', 'Count')
View(pie_chart)
bp<- ggplot(pie_chart, aes(x="Crime", y=Count, fill=Crime))+
geom_bar(width = 1, stat = "identity")
bp
pie <- bp + coord_polar("y", start=0) + scale_fill_brewer(palette="Paired")
pie
pie_crimes <- washington[, -c(6, 8)] #remove Property and Larceny_Theft
View(pie_crimes)
View(washington_crimes)
View(washington)
View(washington)
pie_crimes <- washington[, -c(5, 6, 7)] #remove Property, Burglary, and Larceny_Theft
pie_chart <-melt(pie_crimes, id.vars='School', variable_name='Crime')
colnames(pie_chart) <- c('School', 'Crime', 'Count')
bp<- ggplot(pie_chart, aes(x="Crime", y=Count, fill=Crime))+
geom_bar(width = 1, stat = "identity")
bp
pie <- bp + coord_polar("y", start=0) + scale_fill_brewer(palette="Paired")
pie
View(washington)
pie_crimes <- washington[, -c(6, 7, 8)] #remove Property, Burglary, and Larceny_Theft
pie_chart <-melt(pie_crimes, id.vars='School', variable_name='Crime')
colnames(pie_chart) <- c('School', 'Crime', 'Count')
bp<- ggplot(pie_chart, aes(x="Crime", y=Count, fill=Crime))+
geom_bar(width = 1, stat = "identity")
bp
pie <- bp + coord_polar("y", start=0) + scale_fill_brewer(palette="Paired")
pie
View(washington)
pie_crimes <- washington[, -c(2, 6, 7, 8)] #remove Property, Burglary, and Larceny_Theft
pie_chart <-melt(pie_crimes, id.vars='School', variable_name='Crime')
colnames(pie_chart) <- c('School', 'Crime', 'Count')
bp<- ggplot(pie_chart, aes(x="Crime", y=Count, fill=Crime))+
geom_bar(width = 1, stat = "identity")
bp
pie <- bp + coord_polar("y", start=0) + scale_fill_brewer(palette="Paired")
pie
bp<- ggplot(pie_chart, aes(x="Crime", y=Count, fill=Crime))+
geom_bar(width = 1, stat = "identity")
bp
pie <- bp + coord_polar("y", start=0) + scale_fill_brewer(palette="Paired")
pie
shiny::runApp()
runApp()
pies <- read.csv('./Data/College_Crime_Rate.csv')
runApp()
pies <- read.csv('./Data/College_Crime_Rate.csv')
pies <- read.csv('./Data/College_Crime_Rate.csv')
View(pies)
us_crime <- read.csv('Data/01_crime_in_the_united_states_1996-2015.csv')
data <- read.csv("Data/2015_crimerates_by_state.csv",stringsAsFactors = F) #used to output choropleth plot
college <- read.csv('./Data/College_Crime_Rate.csv')
pies <- read.csv('./Data/College_Crime_Rate.csv')
states <- unique(college$State)
states <- as.character(states) # gets a vector of all states
states <- unique(college$State)
states <- as.character(states) # gets a vector of all states
choices <- reactive({
return(paste(input$choice,collapse=", "))
})
rate_crime <- reactive({
return(input$crime)
})
state_chosen <- reactive({
return(input$state)
})
states_shp <- readOGR(dsn="./states_shp",layer = "states")
states_shp <- states_shp[!grepl("District of Columbia", states_shp$STATE_NAME), ]
STATE_FIPS <- tapply(data$State, data$State, fips)
STATE_FIPS <- as.character(STATE_FIPS)
for(i in 1:length(STATE_FIPS)){
if(!is.na(STATE_FIPS[i]) & nchar(STATE_FIPS[i]) == 1){
STATE_FIPS[i] <- paste("0",STATE_FIPS[i], sep='')
}
}
data <- cbind(data,STATE_FIPS)
states <- merge(states_shp, data, by="STATE_FIPS",all=TRUE)
output$mymap <- renderLeaflet({
pal <- colorQuantile("Oranges",NULL,n=5)
state_popup <-paste("<strong>State: </strong>", states$State,
"<br><strong>Violent Crime:</strong>", rate_crime(),
"<br><strong> Year: </strong>", '2008',
"<br><strong>Rate:</strong>", states$Murder)
#values = ~data[ , rate_crime()]
leaflet(data = states) %>%
setView(lng=-96.416015625, lat= 39.639537564366684, zoom = 4.0) %>%
addProviderTiles("CartoDB.Positron") %>%
addLegend(pal = pal, values = ~data[ , rate_crime()], opacity = 0.7,
title = 'Rate per 100,000', position = "bottomright") %>%
addPolygons(fillColor = ~pal(data[ , rate_crime()]),
fillOpacity=0.8,
color="#2739c4",
weight=2,
popup = state_popup)
})
View(pies)
pies$X <- NULL
View(pies)
pie_selection <- subset(pies, State==state_chosen())
output$PieChart <- renderPlot({
pies$X <- NULL
pie_selection <- subset(pies, State==state_chosen())
pie_selection <- pie_selection[, -c(1, 3)]
pie_crimes <- melt(pie_selection, id.vars='School', variable_name='Crime')
colnames(pie_crimes[3]) <- 'Count'
pie_crimes$Count <- as.numeric(as.character(pie_crimes$Count))
bp <- ggplot(pie_chart, aes(x="Crime", y=Count, fill=Crime))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0) + scale_fill_brewer(palette="Paired")
print(pie)
})
pies$X <- NULL
selection <- subset(college, State==state_chosen()) #get all universities within chosen state
piw_state <- rective({
return(input$Pie_State)
})
library(shiny)
library(shinydashboard)
library(ggplot2)
library(reshape)
library(sqldf)
library(rgdal)
library(cdlTools)
library(magrittr)
library(leaflet)
library(readxl)
library(maps)
library(plotrix)
us_crime <- read.csv('Data/01_crime_in_the_united_states_1996-2015.csv')
data <- read.csv("Data/2015_crimerates_by_state.csv",stringsAsFactors = F) #used to output choropleth plot
college <- read.csv('./Data/College_Crime_Rate.csv')
pies <- read.csv('./Data/College_Crime_Rate.csv')
us_crime <- read.csv('Data/01_crime_in_the_united_states_1996-2015.csv')
data <- read.csv("Data/2015_crimerates_by_state.csv",stringsAsFactors = F) #used to output choropleth plot
college <- read.csv('./Data/College_Crime_Rate.csv')
pies <- read.csv('./Data/College_Crime_Rate.csv')
states <- unique(college$State)
states <- as.character(states) # gets a vector of all states
choices <- reactive({
return(paste(input$choice,collapse=", "))
})
rate_crime <- reactive({
return(input$crime)
})
state_chosen <- reactive({
return(input$state)
})
pie_state <- rective({
return(input$Pie_State)
})
pie_state <- reactive({
return(input$Pie_State)
})
output$LineChart <- renderPlot({
years <- subset(us_crime, select = c("year",input$choice))
mdf <- melt(years, id.vars="year")
g<-ggplot(mdf, aes(x=year,y=value,colour=variable)) +
xlim(input$range) + labs(x = "Year", y = paste("Crime Rate per 100,000 Inhabitants")) +
title(main = 'Violent Crime Rates in the U.S.') + geom_line()
print(g)
})
states_shp <- readOGR(dsn="./states_shp",layer = "states")
states_shp <- states_shp[!grepl("District of Columbia", states_shp$STATE_NAME), ]
STATE_FIPS <- tapply(data$State, data$State, fips)
STATE_FIPS <- as.character(STATE_FIPS)
for(i in 1:length(STATE_FIPS)){
if(!is.na(STATE_FIPS[i]) & nchar(STATE_FIPS[i]) == 1){
STATE_FIPS[i] <- paste("0",STATE_FIPS[i], sep='')
}
}
runApp()
